name: Release

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

jobs:
  migrate:
    name: DB migrations
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: gamearr
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: gamearr
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U gamearr" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install
      - name: Prepare database URL
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          ENCODED=$(node -e "process.stdout.write(encodeURIComponent(process.env.POSTGRES_PASSWORD))")
          echo "::add-mask::$ENCODED"
          echo "DATABASE_URL=postgresql://gamearr:$ENCODED@localhost:5432/gamearr" >> "$GITHUB_ENV"
      - name: Run migrations
        run: pnpm --filter @gamearr/storage exec prisma migrate deploy

  publish:
    needs: migrate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [api, worker, web]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}-${{ matrix.app }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/gamearr-${{ matrix.app }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
      - id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}-${{ matrix.app }}:${{ steps.meta.outputs.version }}
          output-file: sbom-${{ matrix.app }}.spdx.json
      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.33.0
        with:
          image-ref: ghcr.io/${{ github.repository }}-${{ matrix.app }}:${{ steps.meta.outputs.version }}
      - uses: sigstore/cosign-installer@v3
      - name: Sign image
        env:
          COSIGN_YES: 'true'
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -n1 cosign sign
      - name: Generate provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}-${{ matrix.app }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
