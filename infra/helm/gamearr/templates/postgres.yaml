{{- if .Values.postgres.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "gamearr.fullname" . }}-postgres
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
{{- if .Values.postgres.persistence.storageClass }}
  storageClassName: {{ .Values.postgres.persistence.storageClass }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gamearr.fullname" . }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "gamearr.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "gamearr.fullname" . }}-postgres
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "gamearr.fullname" . }}-env
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "{{ .Values.postgres.user }}"]
            initialDelaySeconds: 10
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "{{ .Values.postgres.user }}"]
            initialDelaySeconds: 10
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "gamearr.fullname" . }}-postgres
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "gamearr.fullname" . }}-postgres
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.postgres.service.port }}
      targetPort: {{ .Values.postgres.service.port }}
  selector:
    app: {{ include "gamearr.fullname" . }}-postgres
{{- end }}
